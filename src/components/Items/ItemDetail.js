/*
  Component to view a specific item. 
*/
import React, { useContext, useEffect, useState } from "react";
import { ItemContext } from "./ItemProvider";
import { useParams } from "react-router-dom";

export const ItemCard = () => {
  /*
    The useContext hook allows you to use data structures and 
    functions that a parent provider component exposes.
  */
  const { getItemByKey, singleItem, editTagOfItem } = useContext(ItemContext);

  /*
    The useState function defines a variable for this component to target.
    Render/return content based on the state value and changes.
  */

  /*
    Retrieve the specific item by running the API on page load.
  */
  useEffect(() => {
    getItemByKey(itemID);
  },[]);

  /*
    Save the changes to the form to our state.
  */
  // const handleControlledInputChange = (event) => {
  //   /* First create a copy of state to make changes */
  //   const editTag = { ...singleItem }
  //   /* Set the value of item we want edited to the input */
  //   editTag[event.target.id] = event.target.value
  //   setItem(editTag)
  //   }

  const { itemID } = useParams();
  const bodyData = {
    "key": "G6VXDWEB",
    "version": 16,
    "itemType": "journalArticle",
    "title": "How global biodiversity hotspots may go unrecognized: lessons from the North American Coastal Plain",
    "creators": [
        {
            "creatorType": "author",
            "firstName": "Reed F.",
            "lastName": "Noss"
        },
        {
            "creatorType": "author",
            "firstName": "William J.",
            "lastName": "Platt"
        },
        {
            "creatorType": "author",
            "firstName": "Bruce A.",
            "lastName": "Sorrie"
        },
        {
            "creatorType": "author",
            "firstName": "Alan S.",
            "lastName": "Weakley"
        },
        {
            "creatorType": "author",
            "firstName": "D. Bruce",
            "lastName": "Means"
        },
        {
            "creatorType": "author",
            "firstName": "Jennifer",
            "lastName": "Costanza"
        },
        {
            "creatorType": "author",
            "firstName": "Robert K.",
            "lastName": "Peet"
        },
        {
            "creatorType": "editor",
            "firstName": "David",
            "lastName": "Richardson"
        }
    ],
    "abstractNote": "Biodiversity hotspots are conservation priorities. We identify the North American Coastal Plain (NACP) as a global hotspot based on the classic deﬁnition, a region with > 1500 endemic plant species and > 70% habitat loss. This region has been bypassed in prior designations due to misconceptions and myths about its ecology and history. These fallacies include: (1) young age of the NACP, climatic instability over time and submergence during high sea-level stands; (2) climatic and environmental homogeneity; (3) closed forest as the climax vegetation; and (4) ﬁre regimes that are mostly anthropogenic. We show that the NACP is older and more climatically stable than usually assumed, spatially heterogeneous and extremely rich in species and endemics for its range of latitude, especially within pine savannas and other mostly herbaceous and ﬁredependent communities. We suspect systematic biases and misconceptions, in addition to missing information, obscure the existence of similarly biologically signiﬁcant regions world-wide. Potential solutions to this problem include (1) increased ﬁeld biological surveys and taxonomic determinations, especially within grassy biomes and regions with low soil fertility, which tend to have much overlooked biodiversity; (2) more research on the climatic refugium role of hotspots, given that regions of high endemism often coincide with regions with low velocity of climate change; (3) in low-lying coastal regions, consideration of the heterogeneity in land area generated by historically ﬂuctuating sea levels, which likely enhanced opportunities for evolution of endemic species; and (4) immediate actions to establish new protected areas and implement science-based management to restore evolutionary environmental conditions in newly recognized hotspots.",
    "publicationTitle": "Diversity and Distributions",
    "volume": "21",
    "issue": "2",
    "pages": "236-244",
    "date": "02/2015",
    "series": "",
    "seriesTitle": "",
    "seriesText": "",
    "journalAbbreviation": "Diversity Distrib.",
    "language": "en",
    "DOI": "10.1111/ddi.12278",
    "ISSN": "13669516",
    "shortTitle": "How global biodiversity hotspots may go unrecognized",
    "url": "http://doi.wiley.com/10.1111/ddi.12278",
    "accessDate": "2021-03-01T21:15:02Z",
    "archive": "",
    "archiveLocation": "",
    "libraryCatalog": "DOI.org (Crossref)",
    "callNumber": "",
    "rights": "",
    "extra": "",
    "tags": [
        {
            "tag": "API IS WORKING"
        },
        {
            "tag": "Biodiversity"
        },
        {
            "tag": "Climate Change"
        },
        {
            "tag": "Research"
        }
    ],
    "collections": [
        "MJF7RCTJ"
    ],
    "relations": {},
    "dateAdded": "2021-03-01T21:15:02Z",
    "dateModified": "2021-03-18T14:50:23Z"
};

const noteBody = {
  "key": "U5MNWYH6",
  "version": 14,
  "parentItem": "7XM8E4CQ",
  "itemType": "note",
  "note": "<p>This is a TEST note for global biodiversity</p>",
  "tags": [],
  "relations": {},
  "dateAdded": "2021-03-18T14:49:38Z",
  "dateModified": "2021-03-18T14:49:54Z"
}


  const handleClick = (event) => {
    console.log(singleItem)
    editTagOfItem(itemID, bodyData)
  }

  const handleSecondClick = (event) => {
    console.log(singleItem)
    editTagOfItem(itemID, noteBody)
  }

  return (
    <>
      <h2>Zotero Item</h2>
      <button id="console-log" onClick={() => handleClick()}>
        Console log item and edit tag
      </button>
      <button id="console-log" onClick={() => handleSecondClick()}>
        Console log item and edit NOTE
      </button>
      {/* <input type="text" id="name" onChange={() => handleControlledInputChange()} required autoFocus className="form-control" placeholder="Tags" value={singleItem.tags}/> */}
    </>
    // :
    // <>
    // <button onClick={() => setDisplayForm(true)}>Edit a Tag</button>
    // </>
  )
};

